error: union as errors are not supported
 --> tests/ui/union.rs:4:1
  |
4 | / pub union U {
5 | |     msg: &'static str,
6 | |     num: usize,
7 | | }
  | |_^

error[E0277]: `U` doesn't implement `Debug`
 --> tests/ui/union.rs:3:10
  |
3 | #[derive(Error)]
  |          ^^^^^ `U` cannot be formatted using `{:?}`
  |
  = help: the trait `Debug` is not implemented for `U`
  = note: add `#[derive(Debug)]` to `U` or manually `impl Debug for U`
  = help: the trait `std::error::Error` is implemented for `U`
note: required for `U` to implement `std::error::Error`
 --> tests/ui/union.rs:3:10
  |
3 | #[derive(Error)]
  |          ^^^^^ unsatisfied trait bound introduced in this `derive` macro
4 | pub union U {
  |           ^
note: required by a bound in `Span`
 --> src/span.rs
  |
  | pub struct Span<T>
  |            ---- required by a bound in this struct
  | where
  |     T: Error + Metadata,
  |        ^^^^^ required by this bound in `Span`
  = note: this error originates in the derive macro `Error` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `U` with `#[derive(Debug)]`
  |
4  + #[derive(Debug)]
5  | pub union U {
   |

error[E0277]: `U` doesn't implement `Debug`
 --> tests/ui/union.rs:3:10
  |
3 | #[derive(Error)]
  |          ^^^^^ `U` cannot be formatted using `{:?}`
  |
  = help: the trait `Debug` is not implemented for `U`
  = note: add `#[derive(Debug)]` to `U` or manually `impl Debug for U`
  = help: the trait `Debug` is implemented for `Span<T>`
  = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `U` with `#[derive(Debug)]`
  |
4 + #[derive(Debug)]
5 | pub union U {
  |
